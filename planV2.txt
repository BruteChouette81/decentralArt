plan to partially remove crypto using protocol (convention code)

NAME: Centralized payment ledger 

DESCRIPTION: portocol or convention to allow fiat payment to be as decentralized as crypto payment.


architecture: 

1. user ==> transfer fiat to payment processing oracle with key (keccak DID first 10 chars )
2. payment processing oracle ==> transfer $credits to user (lock fiat in account) ==> gas fees
3. transfer $credits to market (lock them in market)
4. transfer $credits to seller once approoved 
5. exchange $credits to oracle (stake or go)
6. if stake: setup a centralized retrieval method
7. stake USDC and gather rewards  

(4.) if not approved in time: transfer $credits to buyer and exchange them for fiat

oracle: own ETH account that authenticate in the Only pool 

**important: apply changes to decentralized payment system to keep everything together

**important: gas fee: make the oracle pay for it, but charge seller with it (penality on $credits next time they want to retrieve cash) -> make cash on penalities

list of applicable fees: 
-> mint nft using oracle to contract 0.5 ==> 0.0000626268 0.15$ 0.0000810796 0.15$ 0.0000626244 0.15$
-> mint token 0.5 ==> 0.0000683518 or 0.15 $ high price 
-> allowance 0.5 ==> 0.0000713429 or 0.15 $ high price 
-> transfer 0.5 ==> 0.0001127293 or 0.25 $ high price 
-> (refund--> eliminate gas use CPL)
-> proove 0.5 ==>0.0000855221 or 0.20 $ high price 
-> burn 0.5 ==> 0.0000683518 or 0.15 $ high price 

total: 1,5$ we chage 3$

max amount 3$ --> be return minus penalities

**important: proof of decentralization: creation of new account + never changing address

**didtransfer: seller _address/ buyer _address .txt 

new contracts :
-credits: 0xc183177E3207788ea9342255C8Fcb218763d46e2 CONTRACT, ABI in ORACLE
-Rnft : 0x666f393A06285c3Ec10895D4092d9Dc86aeFD45b ABI AND CONTRACT
-dds: 0xdeAf39D7923dD5bbeb22C591694A0dBc38b6AD3a -> 0x2b7098E9F7181562e92E1938A4CF276b299B1a56 CONTRACT ABI in oracle AND site

oracle PK: 0xbc2ba2203c4cc302fcfb2df6358d01f6a15bd0d363bb1cabd17aef51921d501b
oracle address: 0x439da8962debe41408712dE41b6161B66349E250


PAYPAL:

client Id: AbONA1Q9rbHJLPe5ZGWwssIF8z06zRc6y1qU2LsPp0lXaZYjqaCjSTXuC7sAdFW2E_AZCUOuJvnZDhaZ
secret: EIKRUllYOi1Y3h13zdpAWCT-dNICCrvI71X9V_7tgFKpP2hFaQSIKuj3OK--vGSpiO2IRB0s9_99E0Pe

email: sb-bk47ua26361299@business.example.com
pass: Yx&{St9D


STAKING/DEFI: 

- choose a defi service or pay after a certain point
- terms can be arguable (time of invest)
- all crypto is collected our side using centralized exchange 
- after transfering to dollars: automarize a connected other paypal account to transfer funds to user

URLs:

    Exchanges:
        karken docs: https://docs.kraken.com/rest/#tag/User-Trading/operation/addOrder
        kraken withdraw: https://kraken.zendesk.com/hc/en-us/articles/360000423043-Cash-withdrawal-options-fees-minimums-and-processing-times-
        kraken withdraw api: https://docs.kraken.com/rest/#tag/User-Funding/operation/withdrawFunds
        crypto.com docs: https://exchange-docs.crypto.com/exchange/v1/rest-ws/index.html#private-get-deposit-address
        bitbuy docs: https://bitbuy.ca/bitbuy-api

    Staking / DeFi:
        liquidity - uniswap: https://info.uniswap.org/#/arbitrum/pools/0xc31e54c7a869b9fcbecc14363cf510d1c41fa443 // docs: https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol
        lend (centralized): https://www.bybit.com/en-US/earn/savings/
        lend (decentralized): https://www.youhodler.com/loyalty
        lend (centralized/more legit): https://crypto.com/ca/earn
        usdc docs for staking: https://www.circle.com/en/
        high reward lending: https://stakingcrypto.info/en/lending/usd-coin

    won't need:
        moonpay (won't need): https://docs.moonpay.com/moonpay/implementation-guide/off-ramp#confirm-supported-regions-currencies-and-bank-account-types
        banxa docs (won't need): https://docs.banxa.com/docs/partner-dashboard-configurations

    ecom: https://www.edesk.com/fr/blog/ecommerce-website-cost/

list of tests: 
    - did (meta and imperial) --> change pk to password
    - did transfer
    - paypal buying  DONE ✔️ --> frontend 
    - crypto buying (disabled)
    - retrieving money
    - gas CALCULATING !!! tracking / penalities 
    - feed the oracle eth (2-3$ per items ) --> build a eth automatic buyer system -> for staking 
    - 

PLAN + TEST:

goal: test the app in its most primitive state

things to do before test:

- Mint / multiple Mint -> list on oracle (modify contracts) DONE ✔️

- complete purchase on oracle DONE ✔️

- complete retrival (submitProof and burning) DONE ✔️

- retrieve cash with oracle DONE ✔️

class contracts to see which we need and add function and finish them DONE ✔️

make a archive file and remove every none-used functionnalities (metamask and ...)

TEST:

- mint real item DONE ✔️ EC: 10

- multiMint real items DONE ✔️ EC: 20

- database mint  OK ✔️

- load did password / create account DONE ✔️
- load did market DONE ✔️
//0x953888Ae66748E5732a95D65e9460724D56e8957 
// laptop: 0x19CcD7690B3a9e57225F041DB28705F9E9Ec9153

- load item market  DONE ✔️ 
- calculate good fees / penalities on market (2.9% for paypal + 4$ for our fees) ==> in console.jsx and nfts.jsx DONE ✔️ 
- all in canadian DONE ✔️ check to be sure
- ensure that bytes are chill (underflow/overflow: reduce to two decimals points) ==> prices are offset by one in the item list (good in contract) DONE ✔️ 

BEFORE RELEASE:
- clean cpl app.js
- check feeding (amount of gas in cpl)
- check underflow (bytes)
- check any other error that we might enconter using the market (exception reverted)
-> error system to handle all errors DONE ✔️

- calculate fees in form and add staking program oportunity DONE ✔️
- no more bug for nft owner ==> nft receiver (DONE ✔️)

- mintBuy DONE ✔️ EC: 50

- did transfer  DONE ✔️

- submitProof and go  DONE ✔️ EC: 40

- way to add a paypal address DONE ✔️

- refunds test + new market payout DONE ✔️ EC: 30

- delete Item: takes the fee of refund ==> need to modify contract ==> push contract and ABI EC: 60

- style

- facebook

- my items in market DONE ✔️

- categories in market / my items OK ✔️

- individual items link (facebook) DONE ✔️

- load item in chunk (quicker) + delete db and get infos from uri + fast search (from indexing)

- more cpl documentation + public ledger using uuid ID's and block scan for transactions database


CPL::::
The CPL (Centralized Payment Ledger) is a public ledger that allow fiat and crypto payments to be process by a secure 
and decentralized system. This system also allow an adjustable payment processing system that offer fees as low as 0%. 

Payment processing:

The payment processing system is divided in two categories: Fiat and Crypto. 

For Fiat: for Fiat currencies (such as CAD or USD), it is a classic 
payment process (using scalable tools such as Paypal or LightSpeed payment gateways). The payment gateway 
is connected to an Oracle that safely manage the cash in a Fiat Pool. This allow the payment to be confirmed and secured by blockchain, but executed
in the centralized world. 

Scheme: 

Cash $$ === Transfer ===> Oracle Cash Pool ===          Waiting...                        >>>> Cash Transfer to seller (validated using POS)
                                            ----> Confirm by BlockChain Smart Contract ---|

For Crypto: The cryto-currencies can be exchanged in our custom AMM that allow them to be safely stored by the system 
until the payment is complete. 

Scheme: 

Crypto (ETH, BTC, USDT) === Transfer ===> AMM Crypto Pool ----> Confirm by BlockChain Smart Contract ----> crypto Transfer to seller (validated using POS)
                                            

Fee Policy:

For our fee policy, we apply a 10% (all included fee) at the start of a sell. Our profit margin can be calculated with this equation: 
P = p * (10 - f / 100) - k

where: P = Profit, p = price of the item, f = payment processing (usually 2.9% for fiat and 1%-0% for crypto) and k = the constant price (usually 4.6$)

For example: a 1000$ item bought with fiat currency. 
P = 1000 * (10 - 2.9 / 100) - 4.6 = 66.4 or 6.6% of profit over transactions

We choose this 10% policy for two main reasons:
1- we can have a profit (even if the cut is less than most platforms) over sellers who doesn't wish to stake their crypto
2- we gain a bigger marge in order to avoid friction in gas fees

This fee can be diluted down to 0% using our 0% fee option


0%:

the 0% fee protocol is a flexible plan that we propose to sellers who doesn't want to pay the 10% fee. 

We have 3 levels of sellers. each of them have their plans. The higher you are, the more flexible and fast the plans are.

in order to repay their fee, they must gain at lease 3% over their staked amount, but we get a certain amount (witch become extremely interesting when we compound it)


Our way pf making rapid gains: 
- decentralized fiat mining pools -> Compound vaults 5%
- centralized stable lending (12% - 20% apy) -> if more than 4 mounths: get 0% else get half
- centralized pools  -> custom vaults (redistribute to liquidity providers for custom currencies (high fees))

Decentralized Pools policy:
- <6 : get half depending of the level: just fee reduction 
- >6 : get 0% + profit depending on the level
- flexible: idle, planset: 0% insure

Centralized Ledger Pools: 
function: different markets can mint/use their own tokens in our cash pool

Usefullness: every currencies put in vaults have some pool (principle of buy in what you want and sell in what you want). 
using this principle every currency has a pool of stored (secured) token. Collaterals are in the pool you stake on, but always the ratio 1:1 (+fees).
Example: USD to CAD. Someone paying in CAD will store is cad and receive USD from liquidity Providers. Can use commun pools for not used currencies. 
Also, acumulated stablecoins can be used for staking (evite some buying using CEX)

--> must have flexibility  ( vaults while idleing )
scheme:

Sellers/markets ===> setup a new pool (Trasnfer coin or existing crypto (stable else use already existing pool)) ===> preserve fee from buyers and sellers 
====> high level sellers collect those fee (being liquidity providers)



-> cash flow (stake half) --> more time, but get more (5-6%/year)

Blockchain/oracle:

security:

use cases:

- liquidity staking (risky) NO ==> later when colaterals

Examples: Fix fee VS Interest generator:

1 year scenario:
T= transaction
all currencies are in $

Same amount of T:

1,000 T/mounth
12,000 T/year
Avg T volume: 1000 $

12,000,000 $ volume / Y

Fix Fee: 
10% fee: 1,200,000 $ / Y

Interest generator:
25% stake, 75% 10% fee
75%: 900,000 $
25%: 3,000 T = 250 T/mounth 
first 6 mounth completed with 8% +/- in (not compounding) = 120,000 completed and 120,000 not completed
by year 2: 10% using compouding funds 